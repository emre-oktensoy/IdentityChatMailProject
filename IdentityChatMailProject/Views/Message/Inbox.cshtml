@model List<IdentityChatMailProject.Entities.Message>
@{
	ViewData["Title"] = "Inbox";
	Layout = "~/Views/Shared/_MessageLayout.cshtml";
	int count = 0;
}
<div class="content-body">

	<div class="row page-titles mx-0">
		<div class="col p-md-0">
			<ol class="breadcrumb">				
			</ol>
		</div>
	</div>
	<!-- row -->

	<div class="container-fluid">
		<div class="row">
			<div class="col-lg-12">
				<div class="card">
					<div class="card-body">

						@await Component.InvokeAsync("_MessageSideBarComponentPartial")

						<div class="email-right-box">
							<div role="toolbar" class="toolbar">
								<form method="get" >
									   <input type="text" name="searchText" class="form-control w-25" placeholder="Mesajlarda ara..." style="width: 300px; display: inline-block;" value="@(Context.Request.Query["searchText"])" />
									   <button class="btn btn-primary" type="submit">Ara</button>									
								</form>
							</div>
							<div class="email-list m-t-15">

								@foreach (var item in Model)
								{
									<div class="d-flex justify-content-between align-items-center py-2 px-2">
										<div class="d-flex align-items-center" style="width: 30px;">
											@if (item.IsRead)
											{
												<a href="/Message/ChangeIsReadToFalse/@item.MessageId" title="Okunmadı Olarak İşaretle">
													<i class="fa fa-envelope-open text-success"></i>
												</a>
											}
											else
											{
												<a href="/Message/ChangeIsReadToTrue/@item.MessageId" title="Okundu Olarak İşaretle">
													<i class="fa fa-envelope text-danger"></i>
												</a>
											}
										</div>

										<a href="/Message/MessageDetail/@item.MessageId" class="flex-grow-1 mx-3 overflow-hidden text-decoration-none" style="color: inherit;">
											<div class="fw-semibold text-primary text-nowrap">
												<b>@item.SenderEmail </b>
											</div>
											<div class="fw-bold bg-light text-success px-2 py-1 rounded">
												<b> Mesaj Konusu: @item.Subject</b>
											</div>
											<div class="fw-bold bg-light text-success px-2 py-1 rounded">
												@((item.MessageDetail?.Length ?? 0) > 20 ? item.MessageDetail.Substring(0, 20) + "..." : item.MessageDetail)
											</div>
										</a>

										<div class="text-muted text-end" style="width: 100px;">
											@item.SendDate.ToShortDateString()
										</div>
									</div>
								}
							</div>

						</div>

					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- #/ container -->
</div>